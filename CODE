import numpy as np
import pandas as pd
import os
from sklearn.ensemble import RandomForestClassifier

# Set the path to the dataset
data_path = '/kaggle/input'

# Print the files in the dataset directory
for dirname, _, filenames in os.walk(data_path):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# Load the training and test data
train_file_path = os.path.join(data_path, '/content/TRAINING.csv')
test_file_path = os.path.join(data_path, '/content/TESTING.csv')

train_data = pd.read_csv(train_file_path)
test_data = pd.read_csv(test_file_path)

# Display the first few rows of the datasets
print(train_data.head())
print(test_data.head())

# Calculate the survival rates for women and men
women = train_data.loc[train_data.Sex == 'female']["Survived"]
rate_women = sum(women) / len(women)
print("% of women who survived:", rate_women)

men = train_data.loc[train_data.Sex == 'male']["Survived"]
rate_men = sum(men) / len(men)
print("% of men who survived:", rate_men)

# Prepare the data for the model
y = train_data["Survived"]
features = ["Pclass", "Sex", "SibSp", "Parch"]
X = pd.get_dummies(train_data[features])
X_test = pd.get_dummies(test_data[features])

# Ensure the feature columns are the same in both train and test data
X, X_test = X.align(X_test, join='left', axis=1)

# Train the Random Forest model
model = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)
model.fit(X, y)
predictions = model.predict(X_test)

# Create the submission file
output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})
output.to_csv('submission.csv', index=False)
print("Your submission was successfully saved!")
